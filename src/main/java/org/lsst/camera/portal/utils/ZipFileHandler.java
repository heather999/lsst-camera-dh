package org.lsst.camera.portal.utils;

import java.io.IOException;
import java.io.OutputStream;
import java.io.StringWriter;
import java.io.Writer;
import java.util.zip.ZipEntry;
import java.util.zip.ZipOutputStream;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.jsp.JspException;
import javax.servlet.jsp.PageContext;
import javax.servlet.jsp.tagext.JspFragment;
import javax.servlet.jsp.tagext.SimpleTagSupport;

/**
 * Handler for the <zip:file> tag. Opens a zip file which can contain any number
 * of entries, and returns it as the exclusive content of the request.
 * @author tonyj
 */
public class ZipFileHandler extends SimpleTagSupport {

    private String fileName;
    private String comment;
    private ZipOutputStream zipOutputStream;

    /**
     * Called by the container to invoke this tag. The implementation of this
     * method is provided by the tag library developer, and handles all tag
     * processing, body iteration, etc.
     * @throws javax.servlet.jsp.JspException
     */
    @Override
    public void doTag() throws JspException {
        PageContext pageContext = (PageContext) getJspContext();  
        HttpServletResponse response = (HttpServletResponse) pageContext.getResponse(); 
        response.reset();
        response.setContentType("application/zip");
        response.setHeader("Content-Disposition", "attachment; filename="+fileName);
        response.setStatus(200);

        // Throw away any content generated by the tags
        Writer dummy = new StringWriter();
        
        try (ZipOutputStream zip = new ZipOutputStream(response.getOutputStream())) {
            if (comment != null) zip.setComment(comment);
            this.zipOutputStream = zip;

            JspFragment f = getJspBody();
            if (f != null) {
                f.invoke(dummy);
            }

        } catch (java.io.IOException ex) {
            throw new JspException("Error in ZipFileHandler tag", ex);
        }
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    OutputStream addEntry(ZipEntry zipEntry) throws IOException {
        zipOutputStream.putNextEntry(zipEntry);
        return zipOutputStream;
    }

    public void setComment(String comment) {
        this.comment = comment;
    }
}
